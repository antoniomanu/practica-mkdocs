{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Principal"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"about/","text":"Hola Mundo","title":"Acerca de"},{"location":"practica-jekyll/","text":"Creacion de blogs con Jekyll Introducci\u00f3n Jekyll es un generador de sitios web est\u00e1ticos que nos permite crear de forma sencilla blogs, sitios webs personales o webs para proyectos. Los sitios webs generados con Jekyll no usan una base de datos, el contenido del sitio web est\u00e1 escrito en archivos de texto plano en formato Markdown. Primeros pasos Para poder hacer esta practica podemos usar cualquier maquina de ubuntu, simplemente tendremos que abrir el puerto 22 para conectar por SSH y el puerto 4000. Tambien necesitaremos crear un repositorio en nuestro github que llamaremos \"usuario de github\".github.io Una vez creado el repositorio lo clonamos en la maquina que hemos creado Creacion del sitio Cuando se haya clonado entramos y lanzamos el contenedor de Jekyll con el siguiente comando, que nos crear\u00e1 la infraestructura de nuestro blog. sudo docker run -it --rm -v \"$PWD:/srv/jekyll\" jekyll/jekyll jekyll new blog Este comando creara un directorio llamado blog, pero nos es mas comodo tenerlo todo en la raiz del repositorio clonado de github asi que vamos a sacar todo el contenido de este y eliminar el directorio. sudo mv blog/* ./ sudo rm -rf blog Para terminar vamos a subir todos estas cosas que hemos hecho desde consola al repositorio con git add --all, git commit, y git pull. git add --all git commit -m \"Comentario para el commit\" git push Acceso al sitio Para poder acceder a nuestro sitio ahora simplemente tendremos que usar el navegador y poner \"https:// usuario.github.io\" Deberia de aparecer algo como esto: En el archivo creado por defecto te explica como se deben de crear nuevos posts en Jekyll.","title":"Practica Jekyll"},{"location":"practica-jekyll/#creacion-de-blogs-con-jekyll","text":"","title":"Creacion de blogs con Jekyll"},{"location":"practica-jekyll/#introduccion","text":"Jekyll es un generador de sitios web est\u00e1ticos que nos permite crear de forma sencilla blogs, sitios webs personales o webs para proyectos. Los sitios webs generados con Jekyll no usan una base de datos, el contenido del sitio web est\u00e1 escrito en archivos de texto plano en formato Markdown.","title":"Introducci\u00f3n"},{"location":"practica-jekyll/#primeros-pasos","text":"Para poder hacer esta practica podemos usar cualquier maquina de ubuntu, simplemente tendremos que abrir el puerto 22 para conectar por SSH y el puerto 4000. Tambien necesitaremos crear un repositorio en nuestro github que llamaremos \"usuario de github\".github.io Una vez creado el repositorio lo clonamos en la maquina que hemos creado","title":"Primeros pasos"},{"location":"practica-jekyll/#creacion-del-sitio","text":"Cuando se haya clonado entramos y lanzamos el contenedor de Jekyll con el siguiente comando, que nos crear\u00e1 la infraestructura de nuestro blog. sudo docker run -it --rm -v \"$PWD:/srv/jekyll\" jekyll/jekyll jekyll new blog Este comando creara un directorio llamado blog, pero nos es mas comodo tenerlo todo en la raiz del repositorio clonado de github asi que vamos a sacar todo el contenido de este y eliminar el directorio. sudo mv blog/* ./ sudo rm -rf blog Para terminar vamos a subir todos estas cosas que hemos hecho desde consola al repositorio con git add --all, git commit, y git pull. git add --all git commit -m \"Comentario para el commit\" git push","title":"Creacion del sitio"},{"location":"practica-jekyll/#acceso-al-sitio","text":"Para poder acceder a nuestro sitio ahora simplemente tendremos que usar el navegador y poner \"https:// usuario.github.io\" Deberia de aparecer algo como esto: En el archivo creado por defecto te explica como se deben de crear nuevos posts en Jekyll.","title":"Acceso al sitio"}]}